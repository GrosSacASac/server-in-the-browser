//expect(a).toEqual(b);


const isArrayBufferEqual = function (arrayBuffer1, arrayBuffer2) {
    if (arrayBuffer1.byteLength !== arrayBuffer2.byteLength) {
        return false;
    }
    const arrayBuffer1Uint8View = new Uint8Array(arrayBuffer1);
    const arrayBuffer2Uint8View = new Uint8Array(arrayBuffer2);
    
    
    return arrayBuffer1Uint8View.every(function (aNumber, index) {
        return aNumber === arrayBuffer2Uint8View[index];
    });
};
const longString = "FWEOGSQCJSFKGICMVLICDLJTJGNSUGEUIBSQMTEQTVTETWRLPMCSMULEJOONJSPCEOJSUAKEMIOREGCMMVWMISWJMQHNWWSLQPFIJHRKEWAPNUDNMHPCFWBIECHKFVNPFTNLMEAJINAPHBJRFPITTVNCDFCPLUQAITRKFKMPDDWRPMSQSLKCFDVTUMWHJDAKJKQFKQTCSMOMNEHJUWVGBJJDRDGUHWJIDLJSEKTLCMRJJVJDOASNVPSECETAVHWMCWUEBCVMNVMIOQHHWHJISQDDAMVQVCCNCEKLHKAQGHLOSWDWQPMTERCEDLJBPDMSSFNVPEHDSCUBUATENAOMFUUGHQKANGGONKHCKFRWVHQWJREGVNQTODCRHNSKNMIWJIUQASWNLSRHJMMVJHGWFCJLGUVDEDJETCSCPSPBAFPOKSGGAVIDEMNELWFAGEACABDOCHBQJOWJOSNJCRBHNQBEUAEVGFARRKVWSKSBNPATCVMANHPIFENNSOBMUMWMSDPJKWNEVACPAFSOBQNHBNKIFECDBTFUEFLFULWIITOCVICRBNLTIQBBUPJPTBWLGQBLTVIBRWEEKHCMPWGDACTQPHQHNQWDBSMASAFUUMILVWAGNAARRRCKWLUQITATEBQHHQTFPJIGLPTNUCQADCPASVDKCBUEHSEUMLLMGENCOHWIAHPGPNELPIOTSGEUFJUILOQCNEBSAWGFSUMDLFVGLESTQKLPTHKBVKSULVBGOUKHPWSIWMKKKHEDJESFSIEEWIVQCGWAHVOMFDSTRKCDKQJPVFBMTQOEHEQHEMVOFOQIMWDMEGKIDRHQPOKLESIFKMICHWDMGWABKJKKPUQKWIARQPFDHRVMDWMPDWSSKTVJJQAUOBIRNWWFGRPFSEISDBVNVWNOECUMOFIWWGNOIWFOUMBAHADGHQJWKKCTRPGMBBCBFWKBERREOGLALFNGVBFTHREWUJDFONFELSOKNAKKNGNVVVFFFQMTIOVPTLVAJPWBUWNHNLBIJIVQFVOMERABAFLJQJCBNFRWQQDPHIPFNVJAQFSWVTQFHNQIPSFFTCLANOSJJVFJSWIAEVUOIEDMCVJJDPGQEDUVLCNKTCFKFBENJRGROWVLHCNNUANBFNQTAPJOWBHKCJAPEKHPLQTBCWKFEDQGPHPQHDLIEWKGLQUQEFKJBRIABFAHHCRJQCEUINAMVNFJUMGVFBBRPHMQIJEQAMPGRUHICWDULOFMFADUVJGOTRTQACTMCRKPSLUIQLOABUCCMBLGQFEDREOTCELISFJOKCDNFMKSQPDPJTGUBKKVIFCHIGASJGTUSAMQFGJVSSBUWQSVJOOTNLAQEADGRHQOOKUWICKRCOJLQDAMWBAKANLGKOWVRVRILLFEQUVTAHLMTGFIVPQNVPUOLEWFLOIPUITBLWICHAFUMDBGAPPAFEOQPRSLNIUDICHEPLUEQINAKTEQWWKPAAUIPSKSWLRRIVKWEBHBEAQDLSHBQNOIUEQHHKFBQPWOLTMGGTGEUEKUCBQMPNPKNRNQSIMVJPCPIOPKRRIWRQVREICFDSWNMJUEJOLUJSIGFUPOFIMUHEMPSAKWBBPDBPKOLHIQKHNKRVGPWAWTAPTPMDPWFEDJISLWLQVGOKCVEQDTKOLFKGCQRPQOECAEOOKSFSIIGLRQOWRCKHUUJIKSQULBHELIBFRWDDJJLQMFQHNLUJHVIJGABALUEJFTTVVPJLIREJWIBSDNURPCABQPTLPAEEVSVGSRUUODBTTFMWLVMQIJGIHOJFJIGBQMCMLGHOIPBKVTRSUJQHTAGABLSUPLFGSQFISVHQGENCHOPBUPIPOSLAPATPCMSNOPNTCWHISEGNTSHPFIHNUURSCFIHVDSUDKDSOSFGLOMEBVWWQJRJTIREATKTTWRBGNJMQPAMEKMIMLONOGPIRSRJMQUCOMPRQOTESWLRFEBMSDKFSTQFLMEUFHIHRQBMGFTOMDUTDDAUKQLIRKIJDFVWGVFBOFLLVTGVPNGAEGWKIURBMCWBIBGQKDTLDCFOBDOWANWGGOLCGWKQENMDPAUDBUPJTACVASITSPDNQLCIFFWSJUFBSLNAPKFOQGFSJBVGJISKBFDOBTSIGGICHCDJSEOFGDIWHTSWUWIKWDEQNGKVLUCSSTDRJUMKSHBAGNVWTMFHCRVGCLHPIJDRFEWRQLPSEHAKQHRIFNHNSFFDNHJNMTIFMVBHTRIBDOEFJTCNASAFMSTEFEDTFBUHIKOADWUSDFKAUVAAPBCQSRDPHTBTTDNTBJDGJPGSUQMETMPTBNCACROHRNAUETQNVQLULSVUEDSBJFQNLWNVGKWABPMNKFTOMKDJBTJRHBKIOAPPOWJMDJLHWMSBSLORJKBIAPUWDWMRDPIFKEUOHSUCTLIABPNPODKVQFKAHRQMGREEDVVHFDINABHOBGMBONVPFUIHUHTJEUDBCVAIKPOLMQUJAVMUKHTCJCCPIOTMEPDOBUNSJSOFNCQVTVCCDKQKSWREKUSJIARTSANVTBPTPURRAKKWNRTREKRMHUGBCVUQGBWITBIFNVGSTIIAPWQLPCQQUPDLMDHBJEJRKOQRKEICWBRQQVFQTUFUHTDUMKNFLAHLTISHMUBVWKMVKKFKTWWMWCJMVKWITOSNGIPKASGRFEGVGVKTTIKIKQOFKEVOPAGLWJQIEFVRACBJNAOJKOFFHWEGVGFRALVSUHCMJFLGRFGKVONRAJFJHHWLDJKHUMCUGMMVJHMOWFTMQFJVKTAHWOGEPOHIVMRLRQATPKPTPOWVRFWRNBITKJLRLMMOFUHMGCWGMMTTEJDIALBPJFLDLNHNDIPDHIQREAJKJQEUOADFFVOMUJHARCAIVSPMGJMEKRLOPKBMUGMPWHUIEONTURVNLPTVHPWWMCWQQSAUIWGAKALBVAIBTPCNWIHGGROEQMRURCTIUBDGFGWIPAANFDWKLUGEBCWFTBRCIHIPBJWUVVLTRFLCAHAKSKIIACBOWWRCBAHUPRVAWMBVPHIPFMKDSSTDFEJCRINNVFILFNIFEPONETQONUSFCENNHUEVSSSEAFPPOLFVIMWEWBWGBIKROGLMGQBMASNONKRLDMEQKGNVHGFQQOTKOPBDSIRCGVUFVMQSBMBPQDNVQFLNOIJACQRANPHEGMNHUWOFGSTAUPGWUWERBEEGBGIFAEKIBLDKOJGSWROQPGJGUPRHCUENDREGCOGSKBSWGLCJTUPMRDRPVMDEBGDMNJPIHRJFGPLAFAAVMBRPQCLEKOHEQDCIDIBEDVADPJJSCTHFLHTTBEFFBFPMMWUHAWLNBDVAVEBOTFSOQUQCQEWTFLMSVTUGQRPSMTJEOFKRNRPMOFEHATTRDMKBBCTMTCSJRMQGORDCFJTRNETCEASGAJJUACKMOUBVANPCJACERUREBELEIFRHHHGKJCUJPFCHLNLUFPGPVDBSHEKUTCNIELLGSTSUJVDPMLFOPSCKFEKAKOEUAISMIHSWAFKRGKBEMQNHBQUCKUKKPAHJLWROHPFVWLIPPGHUSMFWTWEPMTBDDPPASUQRRUFHICLLJPNEABMMRHDOSQPHPUGCBMGIUVJJWNBJNERPIFPGJWTCALNVOBJPJHLJLNWTJMNKADCSQPCJCKNMPHGLRMOTLRRFWHCCDIPMINHCDOHLEUONNATPRASLJUBUSFDCCGTUSRFNMADLMFJDVVVHOWCNTIJPKJQRDRJOJNTHJUBULVDJBNOUWGBEEEGMPFRVETMAHHVFDKNWHAMENKSMKEWBNOUSAGCAPSFVFKCINWLIUOOKCAUOWACSRICMUGDQLDVWQWBMJWRHGODWOWFJGJHEDRNLTIENUDFEKTTJTQEHFSDWRDHIIIIEEEBNNBKNPBKFHHEHMEVTWJWMLAVECCORVFDMTRNTPBKVDKCUBWGHRJVFPMUEBWOGPADRSRRMIESOQRHLDNVGCOMSCWWSOSKROUOAVAAOGDGKGRQFJNOLPEKHWGCGURHTANFHQVHOWOUQDSERPMINEIOSLIJUWSVWFAKIBNQPGJDGHEMDBWICAEOIPKDBOHNWDODORHCEFNVKRKQNOJEHOWILVQEGAWKUESWVUNRVBWCUJDPDJKRMDIDKGPGHJVCNRTMTGPWSJJONUPSIBEHTUISJUNVKASCSKLLHFKSBQJMBOLPFPOLBSGCBPRCCFNRCPQUFHFUVCWTCMUCTHMTVDQSBJBBKUMQQFPCLOIQAORIAOFDVEBVOILSIJLRAWHTOTOSUIJGDOHDIPKQECBMVVHSGGGDLRIQDDBCKNLWWGBTENNNWHODOAOANIGRSDBNWRGTOSKWDRLBCNFPQEHUQNFAPRPKOMPEMIFTIQCRDIPCPIFRCEGSGTVLTGVCGIGNVACTGEWPVHOTLUDETMMDFOKAAGUTJTLLSSCLWHPUJVNUSVEGWKDIFLRREMNDTBNOEPDLEOMKWWNHPUTJDFWSNUWIBJCAUCLVLVHUOFGJRLODICDODIJRBMNOAOEHGGINHHRMOHENVQLWEHWQPTHKDBMHGAACRFMATGLCOOWOHLIHAIGSAQKUMGJRURHFEVTEQRUMRIMDGMRIQPLSEMRIABTWWJHKTHARNSBPHLFJVMVCJWLKWWPSVKNBSSJEUHERSJWWNHKFCIJCJJATHMIFGJQUFNJEKWHIUDMQNHUJVEOKCSTFVQNESFEPMGWNVQWMOWUMPVHDCKHVFCSDGCSTHMPHDATRGGSMDPKAHLAMIWASGHKIONQIWKNGRCHCLIEWMLIEHSEBLJTKVGLBHGSPGPPLNOEQSUJICDAOSVCTNJGMEVBVAISBIQCQIEWMQSGIPGFBMARJJKAGIJPIHJGAOCNKBISCWNTSSBDKDMTHLVIBROQMULFRGOWCBQAUBPBHAEVNOSTMEIHGKPQOMLHWSVHIJWWNRWQUIITDCUSUSUHJOQJHJQBBGKTDHWFGKUGTNWQGENRCSBMIUIIAMAK";
  
describe("bytes.js", function() {

    beforeEach(function() {

    });

    it("should expose the following functions: headerBodyObjectFromArrayBuffer,    arrayBufferFromHeaderBodyObject, arrayBufferPromiseFromBlob, addInternalMessagePrefixToArrayBuffer, internalMessagePrefixFromArrayBuffer, removeInternalMessagePrefixFromArrayBuffer, splitArrayBuffer, assembleArrayBuffer", function() {
        ["headerBodyObjectFromArrayBuffer",
        "arrayBufferFromHeaderBodyObject",
        "arrayBufferPromiseFromBlob",
        "addInternalMessagePrefixToArrayBuffer",
        "internalMessagePrefixFromArrayBuffer",
        "removeInternalMessagePrefixFromArrayBuffer",
        "splitArrayBuffer",
        "assembleArrayBuffer"].forEach(function (name) {
            //console.log(bytes, name, bytes[name]);
            expect(bytes[name]).toBeDefined();
        });
    });
});
  

describe("bytes.arrayBufferPromiseFromBlob", function() {

    const string1 = "content of blob";
    const aBlob = new Blob([string1]);
    let anArrayBuffer;
    let string2;
    
    beforeEach(function(done) {
        bytes.arrayBufferPromiseFromBlob(aBlob).then(function (arrayBuffer) {
            
            anArrayBuffer = arrayBuffer;
            //console.log(aBlob, anArrayBuffer);
            
            string2 = bytes.stringFromArrayBuffer(anArrayBuffer);
            done();
        });
    });
    
   it("should not affect the content", function(done) {
    expect(string1).toEqual(string2);
    done();
  });
});

describe("bytes.arrayBufferPromiseFromBlob", function() {

    const string1 = longString;
    const aBlob = new Blob([string1]);
    let anArrayBuffer;
    let string2;
    
    beforeEach(function(done) {
        bytes.arrayBufferPromiseFromBlob(aBlob).then(function (arrayBuffer) {
            
            anArrayBuffer = arrayBuffer;
            //console.log(aBlob, anArrayBuffer);
            
            string2 = bytes.stringFromArrayBuffer(anArrayBuffer);
            done();
        });
    });
    
   it("should not affect the content (more data)", function(done) {
    expect(string1).toEqual(string2);
    done();
  });
});
    
  
describe("bytes.addInternalMessagePrefixToArrayBuffer", function() {
    const initialLength = 100;
    beforeEach(function() {

    });

    const originalPrefix = "part";
    const initialArrayBuffer = new ArrayBuffer(initialLength);
    const finalArrayBuffer = bytes.addInternalMessagePrefixToArrayBuffer(initialArrayBuffer, originalPrefix);
    it("should increase the size", function() {
        expect(finalArrayBuffer.byteLength).toBeGreaterThan(initialLength);
    });
});  

describe("after passing an arrayBuffer to bytes.addInternalMessagePrefixToArrayBufferr  and bytes.removeInternalMessagePrefixFromArrayBuffer", function() {
    const initialLength = 100;
    const originalPrefix = "part";
    const initialArrayBuffer = new ArrayBuffer(initialLength);
    const finalArrayBuffer = bytes.addInternalMessagePrefixToArrayBuffer(initialArrayBuffer, originalPrefix);
    const initialcopyArrayBuffer = bytes.removeInternalMessagePrefixFromArrayBuffer(finalArrayBuffer);
    const prefixCopy = bytes.internalMessagePrefixFromArrayBuffer(finalArrayBuffer);
    beforeEach(function() {

    });

    it("the buffer should be the same again", function() {
        expect(isArrayBufferEqual(initialArrayBuffer, initialcopyArrayBuffer)).toBe(true);
    });    
    
    it("the prefix must be readable from bytes.internalMessagePrefixFromArrayBuffer", function() {
        expect(prefixCopy).toEqual(originalPrefix);
    });
});

