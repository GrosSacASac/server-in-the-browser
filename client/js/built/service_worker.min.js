"use strict";const e="2.0.21",t=e,n="/",o=["/offline"],s=4,r=1e4;let c=location.origin;console.log(c);const i={},a={},u={},f={},h=function(e){clearTimeout(f[e]),a[e](i[e]),delete i[e],delete a[e],delete u[e]},l=function(e,t){u[e]&&(u[e](t),delete a[e],delete u[e])},d=function(e){const t=e.header.ressource,n=new Promise(function(e,n){a[t]=e,u[t]=n,i.hasOwnProperty(t)&&h(t),f[t]=setTimeout(function(){l(t,"No answer after 10 seconds")},r)});return self.clients.matchAll().then(function(t){t.forEach(function(t){t.postMessage(e)})}),n},m=function(e){return!String(e).match("rtc")};self.addEventListener("install",function(e){e.waitUntil(caches.open(t).then(function(e){return e.addAll(o)}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){e.waitUntil(caches.keys().then(function(e){return Promise.all(e.map(function(e){if(t!==e)return caches.delete(e)}))}))}),self.addEventListener("message",function(e){const t=e.data;if(t.hasOwnProperty("ORIGIN"))return console.log(t.ORIGIN),void(c=t.ORIGIN);const n=t.ressource,o=t.answer;i[n]=o,a.hasOwnProperty(n)&&h(n)});let w=!1;self.addEventListener("fetch",function(e){w===!1&&(w=!0,Object.getOwnPropertyNames(self.registration).forEach(function(e){console.log(e)}),Object.getOwnPropertyNames(self.WindowClient).forEach(function(e){console.log(e)}));const t=e.request,o=t.url;if(m(o))return void e.respondWith(caches.match(t).then(function(e){return console.log(t,o),e?e:(console.log("fetchResponse",c+n,o),fetch(t).then(function(e){if(e)return e}).catch(function(e){if(c+n===o)return caches.match(new Request("/offline"));throw new Error(e)}))}));const r=t.method,i=t.headers,a={header:{ressource:o.substring(o.indexOf("rtc/")+s),method:r},body:""};i.forEach(function(e,t){a.header[t]=e}),e.respondWith(t.arrayBuffer().then(function(e){const n=t.bodyUsed;n&&e&&(a.body=e)}).catch(function(e){}).then(function(e){return d(a)}).then(function(e){const t=new Response(e.body,{headers:e.header,status:e.header.status||200,statusText:e.header.statusText||"OK"});return t}).catch(function(e){const t=new Response(`<html><p>${e}</p></html>`,{headers:{"Content-type":"text/html"},status:500,statusText:"timedout"});return t}))});