"use strict";const e="3.0.1",t=e,n="/",c="/offline",o=[c,"app","/favicon.png","/css","/doc.css","/about","/help","/open_source","/offline","/quit","/z-worker.js","/inflate.js","/http","/express","/body-parser","/socket.io"],r=4,s=1e4,i=location.origin,u={},a={},f={},h={},l=function(e){clearTimeout(h[e]),a[e](u[e]),delete u[e],delete a[e],delete f[e]},d=function(e,t){f[e]&&(f[e](t),delete a[e],delete f[e])},p=function(e){const t=e.header.ressource,n=new Promise(function(e,n){a[t]=e,f[t]=n,u.hasOwnProperty(t)&&l(t),h[t]=setTimeout(function(){d(t,"No answer after 10 seconds")},s)});return self.clients.matchAll().then(function(t){t.forEach(function(t){t.postMessage(e)})}),n},m=function(){return console.log("logInTheUI function exists"),function(e){self.clients.matchAll().then(function(t){t.forEach(function(t){t.postMessage({LOG:e})})})}}(),g=function(e,t={}){return fetch(e,t).then(function(e){return e&&e.ok?e:Promise.reject("fetch failed")})},w=function(e){return caches.open(t).then(function(t){return t.match(e).then(function(e){return e&&e.ok?e:Promise.reject("Not in Cache")})})},y=function(e){return!String(e).match("rtc")},b=function(){return caches.open(t).then(function(e){return e.addAll(o)})},k=function(){return caches.keys().then(function(e){return Promise.all(e.map(function(e){if(t!==e)return caches.delete(e)}))})},x=function(){return w(new Request(c))};self.addEventListener("install",function(e){e.waitUntil(b().then(skipWaiting).catch(skipWaiting))}),self.addEventListener("activate",function(e){e.waitUntil(k().then(function(){return self.clients.claim()}))}),self.addEventListener("message",function(e){const t=e.data,n=t.ressource,c=t.answer;u[n]=c,a.hasOwnProperty(n)&&l(n)}),self.addEventListener("fetch",function(e){const t=e.request,c=t.clone(),o=t.url;if(m(["fetch"]),y(o))m(["Normal Fetch"]),e.respondWith(w(t).then(function(e){return e}).catch(function(e){return g(c)}).then(function(e){return e}).catch(function(e){return i+n===o?x():Promise.reject(e)}));else{const n=t.method,c=t.headers;m(["Special Fetch"]);const s={header:{ressource:o.substring(o.indexOf("rtc/")+r),method:n},body:""};c.forEach(function(e,t){s.header[t]=e}),e.respondWith(t.arrayBuffer().then(function(e){const n=t.bodyUsed;n&&e&&(s.body=e)}).catch(function(e){}).then(function(e){return p(s)}).then(function(e){const t=new Response(e.body,{headers:e.header,status:e.header.status||200,statusText:e.header.statusText||"OK"});return t}).catch(function(e){const t=new Response(`<html><p>${e}</p></html>`,{headers:{"Content-type":"text/html"},status:500,statusText:"timedout"});return t}))}});